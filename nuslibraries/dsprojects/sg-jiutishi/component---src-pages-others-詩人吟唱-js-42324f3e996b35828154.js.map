{"version":3,"file":"component---src-pages-others-詩人吟唱-js-42324f3e996b35828154.js","mappings":"k7CAiIA,EAjHa,WAqDX,IAAOA,GAAUC,EAAAA,EAAAA,UAASC,OAAOC,QApBjC,WAME,IAJA,IAAMC,EAAeC,EAAAA,MAAU,SAACC,EAAGC,GAAJ,OAC7BD,EAAEE,OAAOC,cAAcF,EAAEC,OAAQ,YAE/BE,EAAO,GACFC,EAAI,EAAGA,EAAIP,EAAaQ,OAAQD,IAAK,CAC5C,IAAME,EAAQT,EAAaO,GACtBE,EAAML,SAGNE,EAAKG,EAAML,QAELE,EAAKG,EAAML,SACpBE,EAAKG,EAAML,QAAQM,KAAKD,GAFxBH,EAAKG,EAAML,QAAU,IAAIO,MAAMF,IAKnC,OAAOH,EAGgCM,KAAzC,GAEA,GAA8Bf,EAAAA,EAAAA,UAC5BD,EAAOiB,KAAI,SAAAZ,GAAI,OAAIA,EAAK,GAAG,GAAGa,KAAKC,UAAU,QADxCC,EAAP,KAAgBC,EAAhB,KAUA,OACE,2BACE,uBAAKC,UAAWC,EAAAA,IACd,gBAAC,EAAAC,EAAD,CACEC,IAAG,4CACHC,IAAI,OACJC,aAAcC,EAAAA,EAHhB,uBAMF,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACX,gBAACC,EAAA,EAAD,KACE,uBAAKR,UAAWS,EAAAA,SACFC,IAAXhC,GACCA,EAAOiB,KAAI,SAACZ,EAAM4B,GAAP,OACT,uBAAKC,IAAKD,GACR,sBAAIE,MAAO,CAAEC,UAAW,SACrB/B,EAAK,IAjFPgC,EAkFUhC,EAAK,GAhFL,KADnBiC,EAAYC,EAAAA,QAAe,SAAA/B,GAAM,OAAIA,EAAOgC,WAAaH,MACjDzB,QAGiB,OAA7B0B,EAAU,GAAGG,aACgB,OAA7BH,EAAU,GAAGI,YAHN,GAOsB,OAA7BJ,EAAU,GAAGG,aACgB,OAA7BH,EAAU,GAAGI,YAEN,UAAYJ,EAAU,GAAGI,YAAc,KAEjB,OAA7BJ,EAAU,GAAGG,aACgB,OAA7BH,EAAU,GAAGI,YAEN,MAAQJ,EAAU,GAAGG,YAAc,SACJ,MAA7BH,EAAU,GAAGI,YACf,MAAQJ,EAAU,GAAGG,YAAc,OAGxC,MACAH,EAAU,GAAGG,YACb,MACAH,EAAU,GAAGI,YACb,OA0DU,gBAAC,IAAD,CACEC,IAAKvB,EAAQa,GACbW,UAAU,EACVtB,UAAWuB,EAAAA,KAEZxC,EAAK,GAAGY,KAAI,SAACJ,EAAOF,GAAR,OACX,0BACEuB,IAAKvB,EACLmC,QAAS,kBAnC7B,SAAuB5B,EAAMe,GAC3B,IAAMc,EAAW7B,EAAKC,UAAU,IAC1B6B,EAAO5B,EAAQH,KAAI,SAACX,EAAGK,GAAJ,OAAWA,IAAMsB,EAAQc,EAAWzC,KAC7De,EAAW2B,GAgCsBC,CAAcpC,EAAMK,KAAMe,IACzCX,UAAW,iCACX4B,KAAK,SACLf,MAAO,CAAEgB,OAAQ,MAAOC,aAAc,mBAErCvC,EAAMgB,WAlG3B,IAAiBQ,EACTC,KAsGE,4BAEF,gBAACe,EAAA,EAAD,W","sources":["webpack://sg-jiutishi/./src/pages/others/詩人吟唱.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport {\n  topicMain,\n  logoImage,\n  indexVideoPlayer,\n  logoImageWrapper,\n} from \"../../../style.module.css\"\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport { Container } from \"react-bootstrap\"\nimport data from \"../../data/Video.json\"\nimport ReactPlayer from \"react-player\"\nimport authors from \"../../data/Poet.json\"\nimport { BackToTopButton } from \"../../components/Content/BackToTopButton.js\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst 詩人吟唱 = () => {\n  function getYear(aut) {\n    const getAuthor = authors.filter(author => author.fullName === aut)\n    if (getAuthor.length === 0) {\n      return \"\"\n    } else if (\n      getAuthor[0].yearOfBirth === null &&\n      getAuthor[0].yearOfDeath === null\n    ) {\n      return \"\"\n    } else if (\n      getAuthor[0].yearOfBirth === null &&\n      getAuthor[0].yearOfDeath !== null\n    ) {\n      return \" ( ? - \" + getAuthor[0].yearOfDeath + \" )\"\n    } else if (\n      getAuthor[0].yearOfBirth !== null &&\n      getAuthor[0].yearOfDeath === null\n    ) {\n      return \" ( \" + getAuthor[0].yearOfBirth + \" - ? )\"\n    } else if (getAuthor[0].yearOfDeath === \"0\") {\n      return \" ( \" + getAuthor[0].yearOfBirth + \" - )\"\n    } else {\n      return (\n        \" ( \" +\n        getAuthor[0].yearOfBirth +\n        \" - \" +\n        getAuthor[0].yearOfDeath +\n        \" )\"\n      )\n    }\n  }\n\n  function getSortedNYFT() {\n    // const filteredSort = data.sort(sortByProperty(\"author\"))\n    const filteredSort = data.sort((x, y) =>\n      x.author.localeCompare(y.author, \"zh-CN\")\n    )\n    var dict = {}\n    for (let i = 0; i < filteredSort.length; i++) {\n      const video = filteredSort[i]\n      if (!video.author) {\n        continue\n      }\n      if (!dict[video.author]) {\n        dict[video.author] = new Array(video)\n      } else if (dict[video.author]) {\n        dict[video.author].push(video)\n      }\n    }\n    return dict\n  }\n\n  const [allVid] = useState(Object.entries(getSortedNYFT()))\n\n  const [currVid, setCurrVid] = useState(\n    allVid.map(data => data[1][0].link.substring(15))\n  )\n\n  function changeCurrVid(link, index) {\n    const realLink = link.substring(15)\n    const temp = currVid.map((x, i) => (i === index ? realLink : x))\n    setCurrVid(temp)\n  }\n\n  return (\n    <div>\n      <div className={logoImageWrapper}>\n        <StaticImage\n          src={`../../images/logo/logo-shirenyinchang.png`}\n          alt=\"logo\"\n          imgClassName={logoImage}\n        ></StaticImage>\n      </div>\n      <Layout>\n        <Seo title=\"詩人吟唱\" />\n        <Container>\n          <div className={topicMain}>\n            {allVid !== undefined &&\n              allVid.map((data, index) => (\n                <div key={index}>\n                  <h4 style={{ marginTop: \"60px\" }}>\n                    {data[0]}\n                    {getYear(data[0])}\n                  </h4>\n\n                  <ReactPlayer\n                    url={currVid[index]}\n                    controls={true}\n                    className={indexVideoPlayer}\n                  />\n                  {data[1].map((video, i) => (\n                    <button\n                      key={i}\n                      onClick={() => changeCurrVid(video.link, index)}\n                      className={\"btn btn-outline-dark rounded-0\"}\n                      type=\"button\"\n                      style={{ margin: \"5px\", borderRadius: \"0px !important\" }}\n                    >\n                      {video.title}\n                    </button>\n                  ))}\n                </div>\n              ))}\n            <br />\n          </div>\n          <BackToTopButton></BackToTopButton>\n        </Container>\n      </Layout>\n    </div>\n  )\n}\n\nexport default 詩人吟唱\n"],"names":["allVid","useState","Object","entries","filteredSort","data","x","y","author","localeCompare","dict","i","length","video","push","Array","getSortedNYFT","map","link","substring","currVid","setCurrVid","className","logoImageWrapper","S","src","alt","imgClassName","logoImage","title","Container","topicMain","undefined","index","key","style","marginTop","aut","getAuthor","authors","fullName","yearOfBirth","yearOfDeath","url","controls","indexVideoPlayer","onClick","realLink","temp","changeCurrVid","type","margin","borderRadius","BackToTopButton"],"sourceRoot":""}